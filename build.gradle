plugins {
    id 'java'
    id 'org.springframework.boot' version '3.3.4'
    id 'io.spring.dependency-management' version '1.1.6'
}

group = 'com.sparta'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    // QueryDSL
    implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
    annotationProcessor "com.querydsl:querydsl-apt:${dependencyManagement.importedProperties['querydsl.version']}:jakarta"
    annotationProcessor "jakarta.annotation:jakarta.annotation-api"
    annotationProcessor "jakarta.persistence:jakarta.persistence-api"

    // JPA
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'

    // Spring Security
    implementation 'org.springframework.boot:spring-boot-starter-security'

    // JWT
    compileOnly group: 'io.jsonwebtoken', name: 'jjwt-api', version: '0.11.5'
    runtimeOnly group: 'io.jsonwebtoken', name: 'jjwt-impl', version: '0.11.5'
    runtimeOnly group: 'io.jsonwebtoken', name: 'jjwt-jackson', version: '0.11.5'

    // Thymeleaf
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
    implementation 'org.thymeleaf.extras:thymeleaf-extras-springsecurity6'

    // Spring Boot
    implementation 'org.springframework.boot:spring-boot-starter-web'

    // Websocket
    implementation 'org.springframework.boot:spring-boot-starter-websocket'

    // Lombok
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    // MySQL
    runtimeOnly 'com.mysql:mysql-connector-j'

    // Jakarta Validation API (Bean Validation)
    implementation 'jakarta.validation:jakarta.validation-api:3.0.2' // 추가된 부분

    // Hibernate Validator (Jakarta Bean Validation 구현체)
    implementation 'org.hibernate.validator:hibernate-validator:8.0.0.Final' // 추가된 부분

    // Test
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

    // validation
    implementation 'org.springframework.boot:spring-boot-starter-validation'

    // SockJS
    implementation 'org.webjars:sockjs-client:1.5.1'

    // STOMP
    implementation 'org.webjars:stomp-websocket:2.3.4'

    // Redis
    implementation 'org.springframework.boot:spring-boot-starter-data-redis'

    // Kafka
    implementation 'org.springframework.kafka:spring-kafka'

    // S3
    implementation 'javax.xml.bind:jaxb-api:2.3.1'
    implementation 'org.glassfish.jaxb:jaxb-runtime:2.3.1'
    implementation 'com.sun.activation:javax.activation:1.2.0'

    implementation 'org.springframework.cloud:spring-cloud-starter-aws:2.2.6.RELEASE'

    // Encache
    implementation 'org.springframework.boot:spring-boot-starter-cache'
    implementation 'net.sf.ehcache:ehcache'
}

tasks.named('test') {
    useJUnitPlatform()
}
